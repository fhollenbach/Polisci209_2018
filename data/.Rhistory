19
20
21
22
23
24
25
26
27
28
29
library(ggmap)
library(mapproj)
map <- get_map(location = 'Europe', zoom = 4)
ggmap(map)
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap)
plot(newmap,
xlim = c(-20, 59),
ylim = c(35, 71),
asp = 1
)
library(ggmap)
europe.limits <- geocode(c("CapeFligely,RudolfIsland,Franz Josef Land,Russia",
"Gavdos,Greece",
"Faja Grande,Azores",
"SevernyIsland,Novaya Zemlya,Russia")
)
europe.limits
plot(newmap,
xlim = range(europe.limits$lon),
ylim = range(europe.limits$lat),
asp = 1
)
install.packages("rworldmap")
install.packages("rworldmap")
library(rworldmap)
newmap <- getMap(resolution = "low")
plot(newmap)
plot(newmap,
xlim = range(europe.limits$lon),
ylim = range(europe.limits$lat),
asp = 1
)
library(rgeos)
library(rgdal)
install.packages("rgdal")
library(rgdal)
remove.packages("rgdal")
install.packages("rgdal", dependencies = T)
library(rgdal)
rm(list = ls())
options(stringsAsFactors = FALSE)
### Libraries
library(ggplot2)
library(foreign)
library(data.table)
library(stargazer)
library(haven)
library(lfe)
library(tidyverse)
library(spdep)
library(bayesplot)
library(brms)
library(rgdal)
library(rgeos)
##########################################################################
##### 0. Notes
##########################################################################
# look at time-varying effect of archbishop/bishop vs. capital to identify
# different periods of state-building
##########################################################################
##### 1. Load Data
##########################################################################
data <- read_dta("~/Dropbox/UniversitiesCapacity/Data/London_Baghdad/city_unis_merged.dta")
names(data)
summary(data)
data$bishop_any <- ifelse(data$archbishop==1 | data$bishop==1,1,0)
data$sea <- as.factor(data$sea)
data$hub_3rr <- as.factor(data$hub_3rr)
data$rom_road_nohub <- as.factor(data$rom_road_nohub)
data$muslim <- as.factor(data$muslim)
data$france_1800 <- as.factor(data$france_1800)
data$prot_in_1600_panel_na <- as.factor(data$prot_in_1600_panel_na)
data$press_by_1500_panel_na <- as.factor(data$press_by_1500_panel_na)
data$bishop_any <- as.factor(data$bishop_any)
data$d_largestate <- as.factor(data$d_largestate)
data$capital <- as.factor(data$capital)
data$commune <- as.factor(data$commune)
data$free_prince_dls <- as.factor(data$free_prince_dls)
data$parl_act <- as.factor(data$parl_act)
data$sname_o <- as.factor(data$sname_o)
data$indicator <- as.factor(data$indicator)
data$year <- as.factor(data$year)
##spatial model
data <- data[order(data$year, data$indicator),]
points <- data[1:677, c("latitude", "longitude")]
points$latitude <- as.numeric(points$latitude)
dnb <- knearneigh(as.matrix(points), 5, longlat = NULL)
dsts <- knn2nb(dnb)
lw <- nb2listw(dsts, style="W", zero.policy=TRUE)
estimationW <- listw2mat(lw)
estimationW <- list(estimationW, estimationW, estimationW, estimationW, estimationW, estimationW, estimationW, estimationW, estimationW, estimationW, estimationW)
WW = bdiag(estimationW)
WWW = as(WW,"matrix")
mod_spatial <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + (1 + bishop_any + prot_in_1600_panel_na+press_by_1500_panel_na + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(),  autocor = cor_lagsar(WWW), warmup = 1000, iter = 2500, chains = 4, cores = 4, control = list(max_treedepth = 15))
rm(list = ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(foreign)
library(data.table)
library(stargazer)
library(haven)
library(lfe)
library(tidyverse)
library(spdep)
library(bayesplot)
library(brms)
library(rgdal)
library(rgeos)
library(sjstats)
library(xtable)
data <- read_dta("~/Dropbox/UniversitiesCapacity/Data/London_Baghdad/city_unis_merged.dta")
names(data)
summary(data)
data$bishop_any <- ifelse(data$archbishop==1 | data$bishop==1,1,0)
data$sea <- as.factor(data$sea)
data$hub_3rr <- as.factor(data$hub_3rr)
data$rom_road_nohub <- as.factor(data$rom_road_nohub)
data$muslim <- as.factor(data$muslim)
data$france_1800 <- as.factor(data$france_1800)
data$prot_in_1600_panel_na <- as.factor(data$prot_in_1600_panel_na)
data$press_by_1500_panel_na <- as.factor(data$press_by_1500_panel_na)
data$bishop_any <- as.factor(data$bishop_any)
data$d_largestate <- as.factor(data$d_largestate)
data$capital <- as.factor(data$capital)
data$commune <- as.factor(data$commune)
data$free_prince_dls <- as.factor(data$free_prince_dls)
data$parl_act <- as.factor(data$parl_act)
data$sname_o <- as.factor(data$sname_o)
data$indicator <- as.factor(data$indicator)
data$year <- as.factor(data$year)
### simple model
load("~/Dropbox/UniversitiesCapacity/ModelResults/Bayes_mod_intercepts.rda")
###restricted model
load("~/Dropbox/UniversitiesCapacity/ModelResults/Bayes_mod_restricted.rda")
### full model
load("~/Dropbox/UniversitiesCapacity/ModelResults/Bayes_mod_full.rda")
### model comparison
loo <- LOO(mod_intercepts, mod_restricted, mod_full)
summary(loo)
loo
posterior_pred <- posterior_predict(mod_restricted)
color_scheme_set("brightblue")
ppc_dens_overlay(y, posterior_pred)
dim(posterior_pred)
posterior_pred <- posterior_predict(mod_restricted,draws = 500)
color_scheme_set("brightblue")
ppc_dens_overlay(y, posterior_pred)
dim(draws = 500)
dim(posterior_pred)
ppc_dens_overlay(data$uni_count, posterior_pred)
ppc_dens_overlay(c(data$uni_count), posterior_pred)
posterior_pred <- posterior_predict(mod_full,draws = 500)
color_scheme_set("brightblue")
ppc_dens_overlay(c(data$uni_count), posterior_pred)
posterior_pred <- posterior_predict(mod_simple,draws = 500)
posterior_pred <- posterior_predict(mod_intercepts,draws = 500)
ppc_dens_overlay(c(data$uni_count), posterior_pred)
comparison(mod_intercepts,mod_restricted)
model_comparison(mod_intercepts,mod_restricted)
library(loo)
compare(mod_intercepts,mod_restricted)
compare(loo)
loo
compare_ic(mod_intercepts,mod_restricted)
kfold(mod_intercepts,mod_restricted,mod_full, k = 10, compare = T)
loo(mod_intercepts,mod_restricted,mod_full, compare = T, cores =2)
loo(mod_intercepts,mod_restricted,mod_full, compare = T, cores = 2, reloo = T)
compare(loo$ic_diffs__)
compare(loo$mod_intercepts)
compare(loo$mod_intercepts,loo$mod_restricted)
compare(loo$mod_intercepts,loo$mod_restricted, loo$mod_full)
plot(density(rhcauchy(1000, sigma = 10)
))
library(extraDist)
library(extraDistr)
install.packages("extraDistr")
library(extraDistr)
plot(density(rhcauchy(1000, sigma = 10)))
plot(density(rhcauchy(1000, sigma = 10)),xlim = c(0,10))
plot(density(rhcauchy(1000, sigma = 10)))
plot(density(rhcauchy(1000, sigma = 10)),xlim = c(0,100))
plot(density(rhcauchy(1000, sigma = 5)))
plot(density(rhcauchy(1000, sigma = 10)),xlim = c(0,100))
plot(density(rhalfnormal(1000, sigma = 1)),xlim = c(0,100))
plot(density(rhnorm(1000, sigma = 1)),xlim = c(0,100))
plot(density(rhnorm(1000, sigma = 1)))
plot(density(rhnorm(1000, sigma = 2)))
plot(rt(1000, 3, 10))
density(plot(rt(1000, 3, 10)))
plot(density(rt(1000, 3, 10)))
plot(density(rt(1000, 3, 3)))
plot(density(rt(1000, 3, 1)))
plot(density(rt(1000, 3, 2)))
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior(normal(0,2), class = "b"), set_prior("student_t(4,0,2)", class = "sd", group = "year"))
save(mod_full, file  = "~/Dropbox/UniversitiesCapacity/ModelResults/Bayes_mod_full.rda")
#### add some tighter priors on the re sd
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior(normal(0,2), class = "b"), set_prior("student_t(4,0,2)", class = "sd", group = "year"))
#### add some tighter priors on the re sd
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior(normal(0,2), class = "b"))
#### add some tighter priors on the re sd
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior("normal(0,2)", class = "b"), set_prior("student_t(4,0,2)", class = "sd", group = "year"))
#### add some tighter priors on the re sd
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior("normal(0,2)", class = "b"))
#### add some tighter priors on the re sd
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, set_prior("normal(0,2)", class = "b"), set_prior("student_t(4,0,2)", class = "sd"))
## define some priors
prior <- c(prior_string("normal(0,2)", class = "b"),
prior_(~student_t(4,0,2), class = ~sd,
group = ~year))
mod_full <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome + prot_in_1600_panel_na + press_by_1500_panel_na + (1 + bishop_any + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act | year) + (1 |  indicator),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4,   prior = prior)
mod_intercepts <- brm(formula = uni_count ~ +latitude+sea+river+hub_3rr+rom_road_nohub+elevation_m+muslim+soilquality+france_1800+ldrome +  bishop_any + prot_in_1600_panel_na+press_by_1500_panel_na + citypop_le5 + conf_count + d_largestate + capital + commune + free_prince_dls + parl_act  + (1 |  indicator + year ),data = data, family = gaussian(), warmup = 1000, iter = 2500, chains = 4, cores = 4, control = list(max_treedepth = 15))
rm(list = ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(foreign)
library(data.table)
library(stargazer)
library(haven)
library(lfe)
library(tidyverse)
library(spdep)
library(bayesplot)
library(brms)
library(rgdal)
library(rgeos)
library(sjstats)
library(xtable)
theme_plot <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
...
)
}
data <- read_dta("~/Dropbox/UniversitiesCapacity/Data/London_Baghdad/city_unis_merged.dta")
names(data)
summary(data)
data$bishop_any <- ifelse(data$archbishop==1 | data$bishop==1,1,0)
###### Bayesian model results
data$sea <- as.factor(data$sea)
data$hub_3rr <- as.factor(data$hub_3rr)
data$rom_road_nohub <- as.factor(data$rom_road_nohub)
data$muslim <- as.factor(data$muslim)
data$france_1800 <- as.factor(data$france_1800)
data$prot_in_1600_panel_na <- as.factor(data$prot_in_1600_panel_na)
data$press_by_1500_panel_na <- as.factor(data$press_by_1500_panel_na)
data$bishop_any <- as.factor(data$bishop_any)
data$d_largestate <- as.factor(data$d_largestate)
data$capital <- as.factor(data$capital)
data$commune <- as.factor(data$commune)
data$free_prince_dls <- as.factor(data$free_prince_dls)
data$parl_act <- as.factor(data$parl_act)
data$sname_o <- as.factor(data$sname_o)
data$indicator <- as.factor(data$indicator)
data$year <- as.factor(data$year)
### simple model
load("~/Dropbox/UniversitiesCapacity/ModelResults/Bayes_mod_intercepts.rda")
launch_shinystan(mod_intercepts)
launch_shinystan(mod_intercepts)
forTable <- tidy_stan(mod_intercepts, prob = c(.90, .95))
vars <- c("Intercept", "Latitude", "Near Sea", "Near River", "Roman Road Hub", "Roman Road", "Elevation", "Muslim Rule", "Quality of Soil", "French Revolution", "Distance to Rome", "Bishop Seat", "Protestant in 1600", "Printing Press in 1500", "Population", "Conflicts", "Large State", "Capital", "Self-Governance", "Princely Rule", "Active Parliament", "Sigma")
forTable <- forTable %>% select(c("term", "estimate", "std.error", "hdi.low_0.9", "hdi.high_0.9", "hdi.low_0.95", "hdi.high_0.95", "rhat"))
names(forTable) <- c("Variable", "Mean", "Std Error", "lower 90 HDI", "upper 90 HDI", "lower 95 HDI", "upper 90 HDI", "Rhat")
forTable$Variable <- vars
forTable <- as.matrix(forTable)
colnames(forTable) <- c(" ", " ", " ", "lower 90$\\%$", "upper  $90\\%$", "lower  $90\\%$", "upper  $90\\%$", " ")
forTable <- rbind(c(" ", "Mean", "Std Error", "HDI", "HDI", "HDI", "HDI", "Rhat"), forTable)
print(xtable(forTable, caption = "Model Results: Simple Bayesian Multilevel Model", label = "Bayes_simple", floating = TRUE, latex.environments = "center", align = "llccccccc", digits = 2), caption.placement = "top", booktabs = TRUE, include.rownames = FALSE,  sanitize.text.function = function(x) {x}, hline.after = c(-1, 1,nrow(forTable)), file = "~/Dropbox/Apps/Overleaf/medieval_unis/table_bayes_simple.tex")
forTable
posterior <- as.array(mod_intercepts)
color_scheme_set("red")
dimnames(posterior)[3]$parameters[which(dimnames(posterior)[3]$parameters %in% c("b_Intercept", "b_latitude", "b_sea1", "b_river", "b_hub_3rr1", "b_rom_road_nohub1", "b_elevation_m", "b_muslim1", "b_soilquality", "b_france_18001", "b_ldrome", "b_bishop_any1", "b_prot_in_1600_panel_na1", "b_press_by_1500_panel_na1", "b_citypop_le5","b_conf_count", "b_d_largestate1", "b_capital1", "b_commune1", "b_free_prince_dls1", "b_parl_act1", "sigma"))] <- vars
p <-  mcmc_intervals(posterior, point_est = "median", prob = 0.95, pars = vars)
plot(p)
posterior <- as.array(mod_intercepts)
color_scheme_set("darkgray")
dimnames(posterior)[3]$parameters[which(dimnames(posterior)[3]$parameters %in% c("b_Intercept", "b_latitude", "b_sea1", "b_river", "b_hub_3rr1", "b_rom_road_nohub1", "b_elevation_m", "b_muslim1", "b_soilquality", "b_france_18001", "b_ldrome", "b_bishop_any1", "b_prot_in_1600_panel_na1", "b_press_by_1500_panel_na1", "b_citypop_le5","b_conf_count", "b_d_largestate1", "b_capital1", "b_commune1", "b_free_prince_dls1", "b_parl_act1", "sigma"))] <- vars
p <-  mcmc_intervals(posterior, point_est = "median", prob = 0.95, pars = vars)
plot(p)
ggsave("~/Dropbox/Apps/Overleaf/medieval_unis/graphics/Bayes_coefs_simple.pdf", width = 10 * 1.618, height = 10)
posterior_predict(mod_intercepts,draws = 500)
post <-posterior_predict(mod_intercepts,draws = 500)
data$uni_binary <- ifelse(data$uni_count > 0, 1, 0)
post %>% ppc_dens_overlay(y = data$uni_count)
data$uni_count
post %>% ppc_dens_overlay(y = data$uni_count, yrep = .)
post %>% ppc_dens_overlay(y = c(data$uni_count), yrep = .)
library(swirl)
install.packages("swirl")
library(swirl)
install_course_github("kosukeimai","qss-swirl")
library(swirl)
swirl()
8-2
10^2
sqrt(9)
result <- 8-2
result
course <- "social science"
course <- "learning R"
result2 <- result
result <- 10-2
world.pop
world.pop[4]
world.pop[c(1,4)]
length(world.pop)
year <- seq(1950,2010,10)
names(world.pop) <- year
x[1]<-NA
swirl
swirl()
library(swirl)
swirl()
swirl()
8-2
10^2
sqrt(9)
5^4
9^4
4^9
library(swirl)
uninstall_course("QSS")
uninstall_course("qss")
swirl()
uninstall_course("qss-swirl")
install_course_github("kosukeimai", "qss-swirl")
swirl()
result <- 8-2
result
course <- "social science"
course <- "learning R"
result2 <- result2
result2 <- result
result <- 10-2
world.pop
world.pop[4]
world.pop[c(1.4)]
info()
world.pop[c(1,4)]
length(world.pop)
year<- seq(1950,2010,10)
names(world.pop) <- year
x[1] <- NA
uninstall_course("qss-swirl")
remove.packages("swirl")
library(swirl)
uninstall_course("qss-swirl")
install_course_github("conjugateprior", "qss-swirl")
swirl()
swirl()
swirl()
8-2
10^2
sqrt(9)
8-2
result <- 8-2
result
course <- "social science"
course <- "learning R"
result2 <- result
result <- 10-2
world.pop
world.pop[4]
world.pop[c(1,4)]
length(world.pop)
year <- seq(1950,2010,10)
names(world.pop) <- year
x[1]<-NA
uninstall_course("qss-swirl")
library(swirl)
uninstall_course("qss-swirl")
install_course_github("conjugateprior", "qss-swirl")
swirl()
8-2
10^2
sqrt(9)
result <- 8-2
result
course <- "social science"
course <- "learning R"
result2 <- result
result <- 10 -2
world.pop
world.pop[4]
world.pop[c(1,4)]
length(world.pop)
year <- seq(1950, 2010, 10)
names(world.pop) <- year
x[1] <- NA
4*7
2*(9+1)
myobject <- 10
result <- myobject -2
class(result)
myobject <- '10'
c(x[1], x[2])
max(x)
pop.million <- world.pop/1000
data_path
df <- read.csv(data_path)
dim(UNpop)
UNpop$world.pop
UNpop$year[3:7]
UNpop$year[c(3:7)]
UNpop$year[c(4:7)]
print("# starts every comment")
library(utils)
swirl()
library(swri)
library(swrirl)
library(swirl)
swirl()
swirl()
library(swirl
)
swirl()
swirl()
library(swirl)
install_course_github("kosukeimai", "qss-swirl”)
)
""
:
asdjapj-0i
2013-12i0-i
"":''
install_course_github("kosukeimai", "qss-swirl")
setwd("~/Documents/GitHub/Polisci209_2018/data/")#### you will need to change this to your directory on your compute
### load data
### read.csv() is a function that reads csv files into R, the head = TRUE argument tells R that the first row is not actually data but has the variable names
boston <- read.csv("boston.csv", head = TRUE)
### our data is now assigned to the object name boston
### let's look at the dimension of the data
dim(boston)
## treatmemnt group change by age
### tapply splits first argument, but factor in second argument and applies function in third argument to it, i.e. take the change variable, split it in groups by age quartile, calculate the mean
t.age.change <- tapply(boston$change[boston$treatment == 1], boston$age.qrt[boston$treatment == 1], mean, na.rm = TRUE)
boston$change <- boston$numberim.post - boston$numberim.pre
## treatmemnt group change by age
### tapply splits first argument, but factor in second argument and applies function in third argument to it, i.e. take the change variable, split it in groups by age quartile, calculate the mean
t.age.change <- tapply(boston$change[boston$treatment == 1], boston$age.qrt[boston$treatment == 1], mean, na.rm = TRUE)
boston$change[boston$treatment == 1]
length(boston$change[boston$treatment == 1])
boston$age.qrt[boston$treatment == 1]
##### age by quantiles
## create age quartiles
qrt <- quantile(boston$age, probs = seq(from = 0, to = 1, by = (1 / 3)))
boston$age.qrt <- ifelse(boston$age <= qrt[2], 1,
ifelse(boston$age > qrt[2] & boston$age <= qrt[3], 2,
ifelse(boston$age > qrt[3], 3, boston$age.qrt)))
##### age by quantiles
## create age quartiles
qrt <- quantile(boston$age, probs = seq(from = 0, to = 1, by = (1 / 3)))
boston$age.qrt <- ifelse(boston$age <= qrt[2], 1,
ifelse(boston$age > qrt[2] & boston$age <= qrt[3], 2,
ifelse(boston$age > qrt[3], 3, boston$age.qrt)))
boston$age
qrt[2]
qrt[3]
boston$age.qrt
boston$age.qrt <- ifelse(boston$age <= qrt[2], 1,
ifelse(boston$age > qrt[2] & boston$age <= qrt[3], 2,
ifelse(boston$age > qrt[3], 3)))
boston$age.qrt <- ifelse(boston$age <= qrt[2], 1,
ifelse(boston$age > qrt[2] & boston$age <= qrt[3], 2,
ifelse(boston$age > qrt[3], 3, NA)))
boston$age.qrt
## treatmemnt group change by age
### tapply splits first argument, but factor in second argument and applies function in third argument to it, i.e. take the change variable, split it in groups by age quartile, calculate the mean
t.age.change <- tapply(boston$change[boston$treatment == 1], boston$age.qrt[boston$treatment == 1], mean, na.rm = TRUE)
t.age.change
## treatmemnt group change by age
### tapply splits first argument, but factor in second argument and applies function in third argument to it, i.e. take the change variable, split it in groups by age quartile, calculate the mean
t.age.change <- tapply(boston$change[boston$treatment == 1], boston$age.qrt, mean, na.rm = TRUE)
boston$change[boston$treatment == 1]
boston$age.qrt
## treatmemnt group change by age
### tapply splits first argument, but factor in second argument and applies function in third argument to it, i.e. take the change variable, split it in groups by age quartile, calculate the mean
t.age.change <- tapply(boston$change, boston$age.qrt[boston$treatment == 1], mean, na.rm = TRUE)
